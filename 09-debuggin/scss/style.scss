$color: red;
$breakpoints: (s: 320px, m: 768px, l: 1024px, xl: 1400px);
@mixin menu {
    margin: 0;
    padding: 0;
    list-style: none;
}

@function double($value) {
    @if (type-of($value) !=number) {
        @debug $value;
        @error 'La función double solo acepta un número como argumento, pero ha recibido un #{type-of($value)}';
    }
    @return $value * 2;
}

@mixin from($breakpoint) {
    @if (map-has-key($breakpoints, $breakpoint)) {
        @media screen and (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
    @else if (type-of($breakpoint) !=number) {
        @error 'El mixin from() recibe solo valores númericos';
    }
    @else if (unit($breakpoint)=='px' or unit($breakpoint)=='em') {
        @media screen and (min-width: $breakpoint) {
            @content
        }
    }
    @else {
        @error '#{$breakpoint} no es un número válido, use valores en px o em';
    }
}


/* Utilizando @warm */

.menu {
    @warn 'El mixin menu será eliminado en la próxima versión';
    @include menu;
}


/* Utilizar el @error */


/*.box {
    width: double("hola");
}*/

.box {
    color: red;
    @include from(red) {
        color: black;
    }
    @include from(s) {
        color: rebeccapurple;
    }
}

body {
    background-color: $color;
    color: complement($color);
}